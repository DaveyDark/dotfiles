// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
  {
    "context": "Workspace",
    "bindings": {
      // panel shortcuts
      "ctrl-escape": "terminal_panel::ToggleFocus",
      "alt-escape": "workspace::ToggleBottomDock",
      "alt-w": "outline_panel::ToggleFocus",
      "alt-e": "project_panel::ToggleFocus",
      "alt-c": "pane::CloseActiveItem",
      "alt-d": "diagnostics::Deploy",
      "alt-tab": "tab_switcher::Toggle",
      "alt-t": "workspace::ToggleBottomDock",

      // Save without format
      "ctrl-shift-s": "workspace::SaveWithoutFormat",

      // move focus between panes
      "ctrl-h": ["workspace::ActivatePaneInDirection", "Left"],
      "ctrl-l": ["workspace::ActivatePaneInDirection", "Right"],
      "ctrl-k": ["workspace::ActivatePaneInDirection", "Up"],
      "ctrl-j": ["workspace::ActivatePaneInDirection", "Down"]
    }
  },
  {
    "context": "Editor && vim_mode == normal && !menu",
    "bindings": {
      // Vim mode panel shortcuts
      "space w": "outline_panel::ToggleFocus",
      "space e": "project_panel::ToggleFocus",
      "space d": "diagnostics::Deploy",
      "space c": "pane::CloseActiveItem",
      "space a": "editor::ToggleCodeActions",
      "space t": "workspace::ToggleBottomDock",
      "space l": "assistant::ToggleFocus",
      "space r": "editor::Rename",
      "ctrl-a": "buffer_search::Dismiss",

      // Git commands
      "space g b": "branches::OpenRecent",
      "space g B": "editor::ToggleGitBlame",

      // Zed commands
      "space z k": "zed::OpenKeymap",
      "space z p": "projects::OpenRecent",
      "space z s": "zed::OpenSettings",
      "space z e": "zed::Extensions",
      "space z t": "theme_selector::Toggle",
      "space z q": "zed::Quit",

      // Search shortcuts
      "space s f": "file_finder::Toggle", // Search for files
      "space s S": "project_symbols::Toggle", // Search for symbols
      "space s s": "outline::Toggle", // Search for symbols within buffer
      "space s t": "pane::DeploySearch", // Global search
      "space s r": "editor::FindAllReferences", // Find all references

      // Comment
      "space /": "vim::ToggleComments",

      // Split panes
      "space v": "pane::SplitRight",
      "space h": "pane::SplitDown",

      // Go to
      "gd": "editor::GoToDefinition",
      "gD": "editor::GoToDeclaration",
      "gf": "editor::GoToDefinitionSplit",
      "gF": "editor::GoToDeclarationSplit",
      "gh": "editor::GoToTypeDefinition",
      "gj": "editor::GoToTypeDefinition",

      // Hover
      "?": "editor::Hover",

      // Switch tabs
      "shift-l": "pane::ActivateNextItem",
      "shift-h": "pane::ActivatePrevItem"
    }
  },
  {
    "context": "Editor && vim_mode == visual && !menu",
    "bindings": {
      "space /": "vim::ToggleComments",
      "space w": "outline_panel::ToggleFocus",
      "space e": "project_panel::ToggleFocus",
      "space d": "diagnostics::Deploy",
      "space c": "pane::CloseActiveItem",
      "space a": "editor::ToggleCodeActions",
      "space t": "workspace::ToggleBottomDock",
      "space l": "assistant::ToggleFocus",
      "space r": "editor::Rename",
      "ctrl-a": "buffer_search::Dismiss"
    }
  },
  {
    "context": "Editor && showing_code_actions",
    "bindings": {
      // Code actions
      "k": "editor::ContextMenuPrev",
      "j": "editor::ContextMenuNext",
      "h": "editor::ContextMenuFirst",
      "l": "editor::ContextMenuLast",
      "space": "editor::ConfirmCodeAction"
    }
  },
  {
    "context": "Editor && showing_completions",
    "bindings": {
      // Code Completions
      "shift-tab": "editor::ContextMenuPrev",
      "tab": "editor::ContextMenuNext",
      "alt-tab": "editor::ContextMenuFirst",
      "enter": "editor::ConfirmCompletion"
    }
  },
  {
    // Tab switcher
    "context": "TabSwitcher",
    "bindings": {
      "shift-h": "menu::SelectPrev",
      "shift-l": "menu::SelectNext"
    }
  },
  {
    "context": "Editor",
    "bindings": {
      // Move focus between panes
      "ctrl-h": ["workspace::ActivatePaneInDirection", "Left"],
      "ctrl-l": ["workspace::ActivatePaneInDirection", "Right"],
      "ctrl-k": ["workspace::ActivatePaneInDirection", "Up"],
      "ctrl-j": ["workspace::ActivatePaneInDirection", "Down"]
    }
  },
  {
    "context": "ProjectPanel || OutlinePanel",
    "bindings": {
      // Close panels
      "alt-e": "workspace::ToggleLeftDock",
      "alt-w": "workspace::ToggleLeftDock",
      "space e": "workspace::ToggleLeftDock",
      "space w": "workspace::ToggleLeftDock"
    }
  },
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      // Project panel shortcuts
      "a": "project_panel::NewFile",
      "d": "project_panel::Delete",
      "x": "project_panel::Cut",
      "c": "project_panel::Copy",
      "r": "project_panel::Rename",
      "p": "project_panel::Paste",
      "l": "project_panel::OpenPermanent"
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      "ctrl-t": "workspace::NewTerminal"
    }
  },
  {
    "context": "EmptyPane",
    "bindings": {
      "space c": "pane::CloseActiveItem",
      "shift-l": "pane::ActivateNextItem",
      "shift-h": "pane::ActivatePrevItem"
    }
  },
  {
    "context": "AssistantPanel",
    "bindings": {
      "alt-m": "assistant::ToggleModelSelector"
    }
  },
  {
    "context": "BufferSearchBar",
    "bindings": {
      // Find and replace key bindings
      "alt-r": "search::ToggleReplace",
      "enter": "search::ReplaceNext",
      "ctrl-enter": "search::ReplaceAll",
      "alt-c": "buffer_search::Dismiss"
    }
  }
]
